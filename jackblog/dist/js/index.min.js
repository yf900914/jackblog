angular.module('app.routes',['ui.router']).config(["$stateProvider", "$httpProvider", "$urlRouterProvider", function($stateProvider,$httpProvider,$urlRouterProvider){
    $httpProvider.defaults.headers.common["X-Requested-With"]='XMLHttpRequest';
    $stateProvider.state('search',{
        url:'/search',
        template:'<topic-list></topic-list>',
        controller:'listController'
    }).state('detail',{
        url:'/detail/:id',
        template:'<topic-detail></topic-detail>',
        controller:'detailController'
    });
    $urlRouterProvider.when('/', '/search')
	$urlRouterProvider.otherwise('/search') 
}]);

var app=angular.module('app',['ui.router','app.routes',
'app.common.factory',
'common.netService',
 'app.common.factory',
'app.topiclist.controller',
'app.topicdetail.controller',
'app.nav.controller',
'app.tag.controller']);
app.directive("scroll", ["$window", function ($window) {
    return function(scope, element, attrs) {
        angular.element($window).bind("scroll", function() {
            //console.log(this.innerHeight);
            var height=this.innerHeight*0.2;
             if (this.pageYOffset >= height) {
                 scope.show = true;
                // console.log('Scrolled below header.');
              } else {
                 scope.show = false;
                 //console.log('Header is in view.');
             }
            scope.$apply();
        });
    };
}]);
app.run(["netService", "$rootScope", function(netService,$rootScope){
    $rootScope.title="Jackblog";
    calWinsize(document,window);
}])  
angular.module('common.netService', [])
    .constant("config",{
        host:"https://cnodejs.org"
    })
    .constant("apiUrl", {
        getTopic: '/api/v1/topic',
        searchTopic: '/api/v1/topics?callback=JSON_CALLBACK/search',
        addTopic: '/topic/add',
        deleteTopic: '/topic/delete'
    })
    .service('netService', ["$http", "apiUrl", "config", function ($http, apiUrl,config) {
    var $this, fn, url;
    $this = this;
    fn = function (url) {
        return $this[url] = function (method, data) {
            var opts;
            if('string'===typeof data){
                opts = {
                    method: 'get',
                    url: config.host+apiUrl[url]+'/'+data,
                };
            } 
            else if (method.toLowerCase() === 'get' || method === 'delete') {
                opts = {
                    method: method,
                    url: config.host+apiUrl[url],
                    params: data
                };
            }else if(method.toLowerCase() === 'jsonp'){
                opts = {
                    method:method,
                    url: config.host+apiUrl[url],
                    params:{callback:'JSON_CALLBACK'}
                }
            }  else{
                opts = {
                    method: method,
                    url: config.host+apiUrl[url],
                    data: data
                };
            } 
            return $http(opts);
        };
    };
    for (url in apiUrl) {
        fn(url);
    }
}]);

angular.module('app.common.factory', []).factory('transferData', function () {
    var get, localStorage, set;
    localStorage = window.localStorage;
    set = function (key, data) {
        return localStorage[key] = JSON.stringify(data);
    };
    get = function (key) {
        if (localStorage[key]) {
            return JSON.parse(localStorage[key]);
        } else {
            return null;
        }
    };
    return {
        set: set,
        get: get
};
});

var calWinsize=function(doc,win){
    var  docEl=doc.documentElement;
    var recal=function(){
        if (docEl.clientWidth<=320){
            clientWidth=320;
        }else if(docEl.clientWidth>=640){
            clientWidth=640;
        }
        else {
            clientWidth=docEl.clientWidth;
        }
        docEl.style.fontSize = 20 * (clientWidth / 320) + 'px';
		doc.body.style.fontSize = 20 * (clientWidth / 320) + 'px';
    }
    recal();
    doc.addEventListener('DOMContentLoaded', recal, true);
}
angular.module('app.topiclist.directive.topiclist',['pagenav','app.topiclist.directive.topicitem','toptag'])
.directive('topicList',function(){
    return{
        restrict:'EA',
        template:'<div class="header"><nav></nav></div><div class="topiclist"><topic item="item" ng-repeat="item in topiclist"></topic>'+
        '<div class="load-more" ng-if="isshow"><p class="load-btn" ng-click=loadmore(isshow)><span class="load">点击查看更多</span></p></div></div>'+
        '<div class="footer"><tag></tag></div>'
    }
})
angular.module('app.topiclist.directive.topicitem',['app.topiclist.directive.topic']).directive('topicItem',function(){
    return {
        restrict:'EA',
        template:'<section class="topicitem"><topic-item></topic-item></section>'
    }
})
angular.module('app.topiclist.directive.topic',[]).directive('topic',function(){
    return {
        restrict:'EA',
        template:'<div class="topic-con">'+
        '<p class="list-top"><span class="creattime">{{item.create_at}}</span></p>'+
        '<h4 class="title"><a ui-sref="detail({id:item.id})" class="link-title">{{item.title}}</a></h4>'+
        '<div class="list-footer"><span>阅读 {{item.visit_count}}</span><span>评论 {{item.reply_count}}</span></div>'+
        '</div>'
    }
})
angular.module('app.topicdetail.directive.topicdetail',[,'toptag' ]).directive('topicDetail',function(){
    return{
        restrict:'EA',
        template:'<div class="page-con"  ng-model="topicdetail">'+
        '<div class="pageheader"><span class="topic-title">{{topicdetail.title}}</span>'+
        '<div class="topicinfo"><span class="release_time">发布于{{topicdetail.create_at}}</span>'+
        '<span class="author">作者{{topicdetail.author.loginname}}</span>'+
        '<span class="visisted">{{topicdetail.visit_count}}次浏览</span><span class="topic-class">来自{{topicdetail.tab}}</span>'+
        '</div></div>'+
        '<div class="topicdetail-con"><div class="topic-content" ng-bind-html="topicdetail.content|htmlContent "></div></div>'+
        '<div class="comment-con"><div class="comment-header"><span class="reply_count">{{topicdetail.reply_count}}条回复</span></div>'+
        '<div class="comment-info" info="info" ng-repeat="info in topicdetail.replies">'+
        '<div class="user-info"><a class="avatar"><img src="{{info.author.avatar_url}}"></a><a class="user-name">{{info.author.loginname}}</a></div>'+
        '<div class="comment_content" ng-bind-html="info.content|htmlContent"></div>'+
        '</div></div><div class="footer"><tag></tag></div>'+
        '</div>'
    }
})
angular.module('toptag', [])
    .directive('tag', function () {
        return {
            restrict: 'EA',
            replace: 'true',
            template: '<div class="tag-con" ng-if="show" ng-click="backtotop()"><i class="fa fa-arrow-circle-up"></i></div>',
            controller: ["$scope", function ($scope) {
                $scope.backtotop = function () {
                    //console.log('back');
                    window.scrollTo(0,0);
                }
            }]
        }
    })
 angular.module('pagenav',[])
 .directive('nav',function(){ 
     return {
         restrict:'EA',
         replace:'true',
         template:'<div class="page-top">'+
         '<ul class="nav-con">'+
         '<li class="nav" ui-serf="search">全部</li>'+
         '<li class="nav">精华</li>'+
         '<li class="nav">分享</li>'+
         '<li class="nav">问答</li>'+
         '<li class="nav">招聘</li></ul></div>'
     }
 })
angular.module('app.topiclist.controller',['app.topiclist.directive.topiclist'])
.controller('listController',["$scope", "netService", function($scope,netService){
    netService.searchTopic('get',{
        limit:10
    }).success(function(body){
        var data;
        if(body.success!==true){
            console.error("netService.addTask",body);
        }
        data = body.data;
        console.log(data);
        //console.log(data.length);
        var len=data.length;
        for (i=0;i<len;i++){
            var time=data[i].create_at;
            var time1=+new Date(time);
            var  time2=+new Date();
            var distime=time2-time1;
            var distime=distime/1000/3600/24;
            if (Math.floor(distime/365)>0){
                data[i].create_at=Math.floor(distime/365)+'年前';
            }else if(Math.floor(distime/30)>0){
                data[i].create_at=Math.floor(distime/30)+'个月前'
            }else if(Math.floor(distime)>0){
                data[i].create_at=Math.floor(distime)+'天前';
            }else if(Math.floor(distime*24)>0){
                data[i].create_at=Math.floor(distime*24)+'个小时前';
            }else if(Math.floor(distime*24*60)>0){
                data[i].create_at=Math.floor(distime*24*60)+'分钟前'
            }else {
                data[i].create_at='刚刚';
            }
        }
        return $scope.topiclist = data;
    });
    $scope.isshow=true;
    $scope.loadmore=function (isshow){
        $scope.isshow=false;
        netService.searchTopic('get',{
            limit:20
        }).success(function(body){
            var data;
            if (body.success!==true){
                console.error("netService.addTask",body);
            }
            data=body.data;
            console.log(data);
             var len=data.length;
        for (i=0;i<len;i++){
            var time=data[i].create_at;
            var time1=+new Date(time);
            var  time2=+new Date();
            var distime=time2-time1;
            var distime=distime/1000/3600/24;
            if (Math.floor(distime/365)>0){
                data[i].create_at=Math.floor(distime/365)+'年前';
            }else if(Math.floor(distime/30)>0){
                data[i].create_at=Math.floor(distime/30)+'个月前'
            }else if(Math.floor(distime)>0){
                data[i].create_at=Math.floor(distime)+'天前';
            }else if(Math.floor(distime*24)>0){
                data[i].create_at=Math.floor(distime*24)+'个小时前';
            }else if(Math.floor(distime*24*60)>0){
                data[i].create_at=Math.floor(distime*24*60)+'分钟前'
            }else {
                data[i].create_at='刚刚';
            }
        }
            return $scope.topiclist=data;
       }); 
    }
    var getTime=function(){
        var date = new Date();
        var year= date.getFullYear();
        var month=date.getMonth()+1;
        var day=date.getDay();
        var hour=date.getHours();
    }
}])
angular.module('app.topicdetail.controller',['app.topicdetail.directive.topicdetail'])
.controller('detailController',["$scope", "$stateParams", "netService", function($scope, $stateParams, netService){
     $scope.id=$stateParams.id;
     //console.log($scope.id);
      netService.getTopic('get', $scope.id).success(function(body){
        var data;
        if (body.success!==true){
            console.error("netService.addTask",body);
        }
        data=body.data;
        console.log(data);
        var time=data.create_at;
        var time1=+new Date(time);
        var  time2=+new Date();
        var distime=time2-time1;
        var distime=distime/1000/3600/24;
         if (Math.floor(distime/365)>0){
             data.create_at=Math.floor(distime/365)+'年前';
         }else if(Math.floor(distime/30)>0){
            data.create_at=Math.floor(distime/30)+'个月前'
         }else if(Math.floor(distime)>0){
             data.create_at=Math.floor(distime)+'天前';
        }else if(Math.floor(distime*24)>0){
            data.create_at=Math.floor(distime*24)+'个小时前';
        }else if(Math.floor(distime*24*60)>0){
            data.create_at=Math.floor(distime*24*60)+'分钟前'
        }else {
            data.create_at='刚刚';
        }
        if(data.tab=="share"){
            data.tab="分享";
        }else if(data.tab=="ask"){
            data.tab="问答";
        }else{
            data.tab="招聘";
        }
         return $scope.topicdetail = data;    
    });
}])
.filter('htmlContent',['$sce', function($sce) {
	return function(input) {
		return $sce.trustAsHtml(input);
	}
}]);

angular.module('app.tag.controller',['toptag'])
.controller('tagController',["$scope", function($scope){
	debugger;
	console.log('xxxxxxxxxx');
   $scope.backtotop=function(){
       console.log('back');
   }
}])
angular.module('app.nav.controller',['pagenav'])
.controller('navController',["$scope", function($scope){

}])